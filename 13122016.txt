функции в питоне: обычные(len(),str()) и пользовательские(сам придумываешь)
функция-блок кода
x=input() x=int(x) y=x**3 y=y+2 
если надо повторить ту же операцию с другим числом(менять х на х1) - кароч это долго и муторно -> ЗЛООО
def(define-определять) + имя функции 
def func1(a,b): // func1(): - нет аргументов //их может быть больше
//двоеточие - отступ не всегда табуляция(мб четыре пробела, которые на неё похожи) - тело функции кароч
def func1(a,b): c=a+b d=c**3 print(d) return d
функция это монстр // излучения Хоккинга 
как вызвать функцию где то в другом месте?
a=func1(5,6)
beat the drum!!
а-шки разные, во второе а упадет d
//сколько аргов про вызове столько же должны быть при определении функции - хотя есть исключения(хитрости)
я ананас...just keep sleeping just keep sleeping
если после функции написать print(c) он не поймет её
ФУНКЦИЯ В ФУНКЦИИ ПОПРОБОВАТЬ
при вызове функции значение после return присвоиться переменной d into a
после return функция ничего не выдаст?
если функция ничего не возвращает, то пишем просто func2(3),например, а не a=func(3) //типо приинта
если не написали return а потом вызывали функцию, тогда в a попадет специальное значение None Type - некое нечто
он всегда соответствует false: if func2():print('True') - ничего не напечает
задача: взять текст, разбить на слова, привести к книжному регистру, удалить знаки препинания, считает слова
s='aAsdFR'
s1=s.lower() or s2=s.upper() or s3=s1.capitalize()
s4=s1.replace('a','') - меняет а на пустоту
strip()-удаляет и с конца и с начала  rstrip()-удаляет с начала lstrip()-удаляет с конца строки - речь про пробельные символы
a=['a,','jy(','vds//']
for word in a: word=word.strip('.,?!()')
for i,word in ennumerate(a): a[i]=word.strip(".,?!:;")

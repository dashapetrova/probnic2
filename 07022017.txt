замена
import re
s1=re.sub('[a-z]+','',s)
s1=re.sub('[a-z]+','[а-я]+',s)
1:что    2:на что    3:какая строка
3 argum: именованные и неименованные
можно ли в 2 писать регулярное выражение - не оч, ибо регулярное выражение определенно
питон воспримет регулярное выражение в 2 как обыную строку
ссылка: выражение ссылается на само себя - для повторений нормальных
"банановый субстрат" - слова из языка потерянного народа перешедшие в шумерский
б(а|о)н...н во втором пропуске должно быть то же что и в первом
ссылка на первую группу: б(а|о)н\1н
в замене:
s1=re.sub("(К|к)ит","\\1от",s) \№1-ссылка \№2-для питона
s1=re.sub("(К|к)ит",r"\1от",s) r-ro..-в сыром виде
s2=re.sub('(o|a)n(o|e)','\\2\\1',s)
если в (о)н(и) надо поменять две буквы: лучше использовать replace: s=s.replace('они','ино') так быстрее
квантификаторы:
задает конкретное число повторений: {2,5} {,5}-от 0 до 5 {2,} {1,}-то же самое что + {4}-4 раза
поиск с начала до конца данных(данные!=слово)
'^(K|k)ит' - слова где К(к) первая буква
[^a-z] - все кроме этих символов(внутри квадратных скобок)
'провать$' - заканчивается на эту часть
\w - считает буквами? (считает цифры буквами) \b - считает цифрами
задача:сплитинг(разбить текст на предложения) и ...
заменить что то на какой то символ на пример @*14 потом по него в массив насплитить
